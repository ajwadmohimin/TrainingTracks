/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.3.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.1;

vertices
(
    (-0.0174524064373 -0.0174524064373 0.999847695156)
    ( 0.0174524064373 -0.0174524064373 0.999847695156)
    ( 0.0174524064373  0.0174524064373 0.999847695156)
    (-0.0174524064373  0.0174524064373 0.999847695156)
    (-2.61786096559   -2.61786096559   149.977154273 )
    ( 2.61786096559   -2.61786096559   149.977154273 )
    ( 2.61786096559    2.61786096559   149.977154273 )
    (-2.61786096559    2.61786096559   149.977154273 )
);

blocks
(
    hex (0 1 2 3 4 5 6 7) (1 1 1200) simpleGrading (1 1 1)
);

edges
(
);

boundary
(
    free
    {
        type patch;
        faces
        (
            (4 5 6 7)
        );
    }
    cyc1
    {
        type wedge;
        neighbourPatch cyc2;
        faces
        (
            (0 1 5 4)
        );
        transform rotational;
        rotationAxis (1 0 0);
        rotationCentre (0 0 0);
        matchTolerance        1e-8;
    }
    cyc2
    {
        type wedge;
        neighbourPatch cyc1;
        faces
        (
            (2 3 7 6)
        );
        transform rotational;
        rotationAxis (1 0 0);
        rotationCentre (0 0 0);
        matchTolerance        1e-8;
    }
    cyc3
    {
        type wedge;
        neighbourPatch cyc4;
        faces
        (
            (0 3 7 4)
        );
        transform rotational;
        rotationAxis (1 0 0);
        rotationCentre (0 0 0);
        matchTolerance        1e-8;
    }
    cyc4
    {
        type wedge;
        neighbourPatch cyc3;
        faces
        (
            (1 2 6 5)
        );
        transform rotational;
        rotationAxis (0 1 0);
        rotationCentre (0 0 0);
        matchTolerance        1e-8;
    }
    sphere
    {
        type wall;
        faces
        (
            (0 1 2 3)
        );
    }

);

mergePatchPairs
(
);

// ************************************************************************* //
